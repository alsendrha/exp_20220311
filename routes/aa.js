-- 시퀀스 생성 SEQ_ITEM1_ITEMNO

CREATE SEQUENCE SEQ_ITEM1_ITEMNO
    START WITH 1001 INCREMENT BY 1 NOMAXVALUE;
-- 시작숫자 1001, 1, NOMAXVALUE

-- ITEM1 테이블에 시퀀스를 이용해서 5개 추가
INSERT INTO ITEM1(ITEMNO, ITEMNAME, ITEMPRICE, ITEMQTY, ITEMDATE) VALUES(SEQ_ITEM1_ITEMNO.NEXTVAL, 'EEE', 6000, 10, CURRENT_DATE);

-- ITEM1에 재고 수량이 100미만은 100으로 변경
UPDATE ITEM1 SET ITEMQTY=
    CASE
        WHEN (ITEMQTY >=0 AND ITEMQTY <= 100)THEN 100
        ELSE 100
    END; 

-- MEMBER1에 회원 3명 추가
INSERT INTO MEMBER1(USERID, USERPW, USERNAME, USERAGE, USERDATE, USERADDR) VALUES('C', 'A', 'TTT', 20, CURRENT_DATE, 'AASD'); 

-- 시퀀스 생성 SEQ_ORDER1_ORDNO
-- 시작숫자 10001, 1, NOMAXVALUE
CREATE SEQUENCE SEQ_ORDER1_ORDNO
    START WITH 10001 INCREMENT BY 1 NOMAXVALUE;
-- 주문 3건 수행하기(ITEM1, MEMBER1 외래키)
INSERT INTO ORDER1(ORDNO, ORDCNT, ORDDATE, ORDITEM, ORDID) VALUES(SEQ_ORDER1_ORDNO.NEXTVAL, 1200, CURRENT_DATE, 1004, 'C');

-- 주문내역을 주문일자 기준으로 내림차순 정렬 조회
SELECT * FROM ORDER1 ORDER BY ORDDATE DESC; 
-- 주문수량이 1000 이상인것만 조회
SELECT * FROM ORDER1 WHERE ORDCNT >=1000; 

SELECT * FROM ORDER1 WHERE ORDCNT >= 1000 ORDER BY ORDDATE DESC;

SELECT * FROM ITEM1;
SELECT * FROM MEMBER1;
SELECT * FROM ORDER1;

COMMIT;
ROLLBACK;

SELECT * FROM BOARD3;
-- 검색
-- 제목에 "가" 포함된 것 검색
-- SELECT 컬럼 FROM 테이블 WHERE 컬럼 LIKE 검색어
-- ORDER BY 컬럼 ASC||DESC
SELECT NO, TITLE, WRITER, HIT, REGDATE FROM BOARD3 WHERE TITLE LIKE '%'|| '가'||'%' ORDER BY NO DESC;

-- 페이지네이션
-- (EX)DT, ROWN) 클럽명 뒤쪽에 입력하면 변경됨
-- BOARD3 => 컬럼 ROWN 추가 => 조회
SELECT 
    NO NO, TITLE TITLE, WRITER WRITER, HIT HIT, REGDATE DT 
FROM
    BOARD3;

SELECT * FROM (
SELECT 
    NO NO, TITLE TITLE, WRITER WRITER, HIT HIT, REGDATE DT, 
    ROW_NUMBER() OVER (ORDER BY NO DESC) ROWN
FROM
    BOARD3
)BOARD33 WHERE ROWN BETWEEN 1 AND 9;

CREATE OR REPLACE VIEW BOARD33 AS
SELECT 
    NO NO, TITLE TITLE, WRITER WRITER, HIT HIT, REGDATE DT, 
    ROW_NUMBER() OVER (ORDER BY NO DESC) ROWN
FROM
    BOARD3;

SELECT * FROM BOARD33;
---------------------------------------------------------------------------------
INSERT INTO BOARD3(NO, TITLE, CONTENT, WRITER, HIT, REGDATE) VALUES(SEQ_BOARD3_NO.NEXTVAL, '가가가', '나나', 'A', 1, CURRENT_DATE);

SELECT * FROM MEMBER3 WHERE ID IN('A','B','C');

SELECT * FROM MEMBER3 WHERE ID IN('A','B','C') ORDER BY ID DESC;

-- 게시판 조회수가 20이상인것을 글번호 기준 내림차순으로 조회
SELECT * FROM BOARD3 WHERE HIT >= 20 ORDER BY NO DESC;

-- 삭제하기
-- DELETE FROM 테이블명 WHERE 조건;
DELETE FROM BOARD3 WHERE NO=2;

COMMIT;
ROLLBACK;

SELECT * FROM BOARD3;
SELECT * FROM MEMBER3;

-- 기본적으로 외래키로 등록된 ID가 게시한글이 있을경우 삭제 불가
-- 회원삭제, 중요정보를 UPDATE를 함.
DELETE FROM MEMBER3 WHERE ID='B';

---------------------------------------------------------------------------------
-- 게시판에서 글번호가 1번인것의 제목을 'BBB; 조회수를 10
-- 게시판에서 조회수가 0~9 => 10
-- 조회수가 10~20 => 20
-- 조회수가 30~40 => 30
-- 나머지는 40
UPDATE BOARD3 SET TITLE='BBB', HIT=10 WHERE NO=1;

-- 글번호 1,3,5번 인 항목 수정
UPDATE BOARD3 SET TITLE='BBB', HIT=10 WHERE NO=1 OR NO=3 OR NO=5;
UPDATE BOARD3 SET TITLE='BBB', HIT=10 WHERE NO IN(1 ,3 ,5);
UPDATE BOARD3 SET HIT=
    CASE
        WHEN (HIT >=0 AND HIT <= 9)THEN 10
        WHEN (HIT >=10 AND HIT <=20)THEN 20
        WHEN (HIT >=30 AND HIT <=40)THEN 30
        ELSE 40
    END;    

COMMIT;
ROLLBACK;

SELECT * FROM BOARD3;

-- 수정하기

-- UPDATE 테이블명 SET 컬럼명 = 변경값, 컬럼명 = 변경값 WHERE 조건;
UPDATE MEMBER3 SET AGE=22, PHONE='010-9898-7069' WHERE ID= 'A';

-- 나이가 0~20까지는 나이를 200으로 아니면 300으로 변경
-- 나이가 21~40이면 나이를 300
-- 나머지는 400으로 변경
UPDATE MEMBER3 SET AGE = 
    CASE
        WHEN (AGE >=0 AND AGE <= 20) THEN 200
        WHEN (AGE >=21 AND AGE <= 40) THEN 300
        ELSE 400
    END;    

COMMIT;
ROLLBACK;

-- 제약조건이 걸린건 그와 연결된 테이블이 채워져야 사용가능


-- 전체조회
SELECT * FROM MEMBER3;

-- 추가하기
-- INSERT INTO 테이블명(컬럼명) VALUES(추가값);
INSERT INTO MEMBER3(ID, PW, AGE, PHONE, GENDER, REGDATE, REGDATE1) VALUES('D', 'A', 11, '010-000-0000', 'F', CURRENT_DATE, CURRENT_DATE); 

-- 일괄등록(들어가거나 안들어가거나)
INSERT ALL INTO MEMBER3(ID, PW, AGE, PHONE, GENDER, REGDATE, REGDATE1) VALUES('E', 'A', 11, '010-000-0000', 'F', CURRENT_DATE, CURRENT_DATE)
            INTO MEMBER3(ID, PW, AGE, PHONE, GENDER, REGDATE, REGDATE1) VALUES('F', 'A', 11, '010-000-0000', 'F', CURRENT_DATE, CURRENT_DATE)
            INTO MEMBER3(ID, PW, AGE, PHONE, GENDER, REGDATE, REGDATE1) VALUES('G', 'A', 11, '010-000-0000', 'F', CURRENT_DATE, CURRENT_DATE)
SELECT * FROM DUAL;

COMMIT; -- 적용하기 (추가, 삭제, 수정)
ROLLBACK; -- 되돌리기

-- 시퀀스 생성하기
CREATE SEQUENCE SEQ_BOARD3_NO
    START WITH 1 INCREMENT BY 1 NOMAXVALUE;

INSERT INTO BOARD3(NO, TITLE, CONTENT, WRITER, HIT, REGDATE) VALUES(SEQ_BOARD3_NO.NEXTVAL, 'A', 'A', 'A', 1, CURRENT_DATE); 

COMMIT; -- 적용하기 (추가, 삭제, 수정)
ROLLBACK; -- 되돌리기

SELECT * FROM BOARD3;

SELECT SEQ_BOARD3_NO.CURRVAL FROM DUAL; 

-- 데이터 정의어 : DDL
-- 테이블생성 및 구조, 제약조건 등을 설정
CREATE TABLE MEMBER3 (
    ID VARCHAR2(30),
    FW VARCHAR2(200),
    AGE NUMBER(3),
    PHONE VARCHAR2(15),
    GENDER VARCHAR2(1),
    REGDATE DATE,
    REGDATE1 TIMESTAMP,
    CONSTRAINT PK_MEMBER3_ID PRIMARY KEY(ID),
    CONSTRAINT CK_MEMBER3_GENDER CHECK (GENDER IN ('M','F'))
);

-- 주소컬럼추가
ALTER TABLE MEMBER3 ADD ADDR VARCHAR2(100);

-- 주소 타입의 길이 100 -> 120
ALTER TABLE MEMBER3 MODIFY ADDR VARCHAR2(120);

-- 주소 컬럼 삭제
ALTER TABLE MEMBER3 DROP COLUMN ADDR;

-- 기본키 제약조건 설정(동작안됨)
ALTER TABLE MEMBER3 ADD
    CONSTRAINT PK_MEMBER3_ID PRIMARY KEY(ID);
    
-- 성별에 not null 추가
ALTER TABLE MEMBER3 MODIFY GENDER NOT NULL;

-- 연락처에 고유값(UNIQUE) 설정(제약조건)
ALTER TABLE MEMBER3 ADD CONSTRAINT UQ_MEMBER3_PHONE UNIQUE(PHONE);

-- 제약조건 삭제
ALTER TABLE MEMBER3 DROP CONSTRAINT UQ_MEMBER3_PHONE;  


-- 게시판(BOARD3) 테이블 생성
CREATE TABLE BOARD3(
    NO NUMBER,
    TITLE VARCHAR2(20),
    CONTENT CLOB,
    WRITER VARCHAR2(30),
    HIT NUMBER,
    REGDATE DATE,
    CONSTRAINT PK_BOARD3_NO PRIMARY KEY(NO),
    CONSTRAINT FK_BOARD3_WRITER FOREIGN KEY(WRITER)REFERENCES MEMBER3
)

ALTER TABLE BOARD3 ADD CONSTRAINT PK_BOARD3_ID PRIMARY KEY(NO);
ALTER TABLE BOARD3 DROP CONSTRAINT PK_BOARD3_ID;
ALTER TABLE BOARD3 MODIFY NO not null;
ALTER TABLE BOARD3 MODIFY TITLE VARCHAR2(100);
DROP TABLE BOARD3 CASCADE CONSTRAINTS; 

-- 제약조건 기본키(PK), 외래키(FK), 체크(CK), 고유값(UQ)

-- 부서테이블(department)
-- 1. 테이블생성(제약조건x)
-- 부서번호 : NO
-- 부서명 : NAME
-- 2. 제약조건 : 기본키
-- 3. 지역컬럼 추가(AREA VARCHAR2(20))
-- 4. 지역컬럼의 체크값을 "부산", "서울", "대전"만 가능하게
-- 5. 부서명의 길이를 30으로 변경
-- 6. 부서명에 not null 추가
-- 7. 부서명에 UNIQUE 제약조건 성정 UQ_DEPT_NAME

CREATE TABLE DEPARTMENT(
    NO NUMBER,
    NAME VARCHAR2(20)
);

ALTER TABLE DEPARTMENT ADD CONSTRAINT PK_DEPARTMENT_NO PRIMARY KEY(NO);

ALTER TABLE DEPARTMENT ADD AREA VARCHAR2(20);

ALTER TABLE DEPARTMENT ADD CONSTRAINT CK_DEPARTNEMT_AREA CHECK(AREA IN('부산', '서울', '대전'));

ALTER TABLE DEPARTMENT MODIFY NAME VARCHAR2(30);

ALTER TABLE DEPARTMENT MODIFY NAME not null;

ALTER TABLE DEPARTMENT ADD CONSTRAINT UQ_DEPT_NAME UNIQUE(NAME);

-- 회사원 테이블(employee)
-- 1. (제약조건 , 기본키, 체크만)
-- 사원번호 : NO (PK)
-- 이름 : NAME
-- 부서번호 : DEPTNO(FK)
-- 상사번호 : PEMPNO
-- 직급 : POSITION VARCHAR(10), (CK -"대리", "과장", "부장", "차장")만 가능
-- 급여 : PAY NUMBER
-- 등록일 : REGDATE DATE
-- 2. 부서 테이블의 부서번호를 회사원테이블의 부서 번호와 외래키 연결

CREATE TABLE EMPLOYEE(
    NO NUMBER PRIMARY KEY,
    NAME VARCHAR2(20),
    DEPTNO NUMBER,
    PEMPNO NUMBER,
    POSITION VARCHAR(10),
    PAY NUMBER,
    REGDATE DATE,
    CONSTRAINT CK_EMPLOYEE_POSITION CHECK(POSITION IN('대리','과장','부장','차장'))
)
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_DEPTNO FOREIGN KEY(DEPTNO)REFERENCES DEPARTMENT(NO);



-- 시스템 계정 => system / 111
-- 데이터제어어(DCL) 사용자를 추가, 권한부여, 권한삭제, 제거

-- 계정생성 (ex GUEST2XX, 암호 1234)
CREATE USER GUEST215 IDENTIFIED BY "1234";

-- 계정확인
SELECT * FROM DBA_USERS;

-- 권한부여 (접속, 리소스)
GRANT CONNECT, RESOURCE TO GUEST215;

-- 권한회수, 제거(접속, 리소스)
REVOKE CONNECT, RESOURCE FROM GUEST215;

-- 계정삭제
DROP USER GUEST215 CASCADE;